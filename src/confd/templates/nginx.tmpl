daemon off;
user www-data;
worker_processes 4;

error_log  /var/log/nginx/error.log warn;
pid        /var/run/nginx.pid;

events {
	worker_connections 1024;
}

http {

	##
	# Basic Settings
	##

	sendfile on;
	keepalive_timeout 65;

	include /etc/nginx/mime.types;
	default_type application/octet-stream;

        server_names_hash_bucket_size 64;

	##
	# Logging Settings
	##

	# access_log /var/log/nginx/access.log;
	access_log off;
	error_log /var/log/nginx/error.log;

	##
	# Virtual Host Configs
	##

	include /etc/nginx/conf.d/*.conf;

	{{range $spec := getvs "/registry/services/specs/*/*"}}
	{{$data := json $spec}}
	{{ if $data.metadata.annotations.kubernetesReverseproxy }}
	{{$p := json $data.metadata.annotations.kubernetesReverseproxy }}
	{{range $proxy := $p.hosts}}
	{{if $proxy.host }}
	server {

		{{if $proxy.port }} listen {{$proxy.port}}; {{end}}
		server_name {{$proxy.host}};

		{{if $proxy.ssl   }}
		ssl_certificate           /etc/nginx/ssl/{{$proxy.sslCrt}};
		ssl_certificate_key       /etc/nginx/ssl/{{$proxy.sslKey}};

		ssl on;
		ssl_session_cache  builtin:1000  shared:SSL:10m;
		ssl_protocols  TLSv1 TLSv1.1 TLSv1.2;
		ssl_ciphers HIGH:!aNULL:!eNULL:!EXPORT:!CAMELLIA:!DES:!MD5:!PSK:!RC4;
		ssl_prefer_server_ciphers on;
		{{ end }}

		{{if $proxy.path }}
		{{range $path := $proxy.path}}
		location {{$path}}/ {

			proxy_set_header X-Real-IP $remote_addr;
			proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
			proxy_set_header Host $http_host;
			proxy_set_header X-NginX-Proxy true;

			{{if $proxy.ssl   }}
			proxy_redirect http:// https://;
			{{ else }}
			proxy_redirect off;
			{{ end }}

			{{if $proxy.webSocket   }}
			proxy_http_version 1.1;
			proxy_set_header Upgrade $http_upgrade;
			proxy_set_header Connection "upgrade";
			{{ end }}

			proxy_pass http://{{$data.portalIP}}:{{$data.port}};
		}
		{{ end }}

		{{ if $proxy.defaultPath}}
		location / {
			rewrite ^/$ {{$proxy.defaultPath}}/ permanent;
		}
		{{ end }}
		{{ else }}
		location / {

			proxy_set_header X-Real-IP $remote_addr;
			proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
			proxy_set_header X-Forwarded-Proto $scheme;
			proxy_set_header Host $http_host;
			proxy_set_header X-NginX-Proxy true;
			proxy_set_header X-Original-URI $request_uri;

			{{if $proxy.webSocket   }}
			proxy_http_version 1.1;
			proxy_set_header Upgrade $http_upgrade;
			proxy_set_header Connection "upgrade";
			{{ end }}


			{{if $proxy.ssl   }}
			proxy_redirect http:// https://;
			{{ else }}
			proxy_redirect off;
			{{ end }}
			proxy_pass http://{{$data.spec.clusterIP}}:{{(index $data.spec.ports 0).port}};
		}
		{{ end }}

	}
    {{ else }}
    server {
        {{if $proxy.port }} listen {{$proxy.port}}; {{end}}
		proxy_pass {{$data.spec.clusterIP}}:{{(index $data.spec.ports 0).port}};
    }
	{{ end }}
	{{ end }}
	{{ end }}
	{{ end }}
}

stream {
	{{range $spec := getvs "/registry/services/specs/*/*"}}
	{{$data := json $spec}}
	{{ if $data.metadata.annotations.kubernetesReverseproxy }}
	{{$p := json $data.metadata.annotations.kubernetesReverseproxy }}
	{{range $proxy := $p.hosts}}
	{{if not $proxy.host }}
    server {
        {{if $proxy.port }} listen {{$proxy.port}}; {{end}}
		proxy_pass {{$data.spec.clusterIP}}:{{(index $data.spec.ports 0).port}};
    }
	{{ end }}
	{{ end }}
	{{ end }}
	{{ end }}
}
